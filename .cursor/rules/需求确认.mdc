---
description: 
globs: 
alwaysApply: true
---
# 需求文档：软件版本系统

## 简介
本系统为开发团队和企业管理员提供应用版本控制与会员服务管理功能，包含应用管理、会员管理和API服务三大模块，支持高并发访问和结构化权限配置。

## 需求

### 需求1 - 应用管理

**用户故事：** 作为管理员，我需要管理应用信息及版本发布，以便团队可以高效控制软件迭代。

#### 验收标准
1. 当管理员点击"新增应用"时，系统应弹出表单包含名称、描述字段
2. 如果表单验证失败时，系统应标红错误字段并显示提示文案
3. 当版本发布成功时，系统应记录版本号、更新内容并更新Redis缓存
4. 如果尝试删除有历史版本的应用时，系统应阻止操作并提示"请先清空版本记录"

### 需求2 - 会员管理

**用户故事：** 作为运营人员，我需要配置会员等级及权限，以便实现差异化的服务策略。

#### 验收标准
1. 当编辑会员等级权限JSON时，系统应提供实时语法验证和格式化功能
2. 如果提交的JSON不符合预定义结构时，系统应阻止保存并提示示例格式
3. 当查询会员权益时，系统应优先从Redis读取缓存数据
4. 如果缓存未命中时，系统应在200ms内返回MySQL查询结果

### 需求3 - API服务

**用户故事：** 作为客户端开发者，我需要通过API获取版本和会员数据，以便实现自动更新和权限控制。

#### 验收标准
1. 当请求/app/{id}/version时，系统应返回该应用最新版本号及更新日志
2. 如果应用ID不存在时，系统应返回404状态码和错误信息
3. 当并发请求达到1000QPS时，系统应保持响应时间<200ms
4. 如果请求未携带认证token时，系统应返回401状态码和登录引导

### 需求4 - 系统安全

**用户故事：** 作为系统管理员，我需要关键操作二次确认机制，以避免误操作导致数据丢失。

#### 验收标准
1. 当触发删除操作时，系统应弹出确认对话框并显示可配置的提示文案
2. 如果连续3次验证失败时，系统应临时锁定账户并发送告警邮件
3. 当会员权限JSON更新时，系统应自动备份前一个版本到审计日志
4. 如果检测到SQL注入尝试时，系统应阻断请求并记录攻击IP

## 迭代建议
1. 是否需要增加版本灰度发布功能？
2. 会员权限JSON是否需支持版本控制？
3. API是否要增加请求频次限制？
4. 是否需增加操作日志的导出功能？

请确认上述需求是否覆盖核心场景，或提出需要调整/补充的细节。