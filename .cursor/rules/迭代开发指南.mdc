---
description: 
globs: 
alwaysApply: true
---
我将按照迭代方式完整输出每个功能的详细开发步骤：

## 迭代1：前端基础框架搭建

### 1. 搭建前端基础框架
1.1 初始化Next.js项目
- 执行`npx create-next-app@latest`命令
- 选择TypeScript、ESLint等配置项
- 清理默认模板文件

1.2 配置Tailwind CSS
- 安装tailwindcss及相关依赖
- 初始化tailwind配置
- 修改globals.css添加基础样式
- 配置postcss

1.3 集成shadcn/ui组件库
- 执行初始化命令`npx shadcn-ui@latest init`
- 配置components.json
- 添加基础组件(button, card等)

1.4 配置基础路由和布局
- 创建app目录结构
- 实现主布局组件(layout.tsx)
- 配置路由分组
- 添加全局状态管理

## 迭代2：应用管理模块

### 2.1 开发应用列表页面
2.1.1 网格布局实现
- 创建apps/page.tsx
- 使用Grid组件实现响应式布局
- 设置不同断点的列数变化

2.1.2 卡片组件开发
- 创建AppCard组件
- 实现hover阴影过渡效果
- 添加加载骨架屏

2.1.3 数据获取逻辑
- 实现SWR数据获取
- 添加加载/错误状态处理
- 实现无限滚动分页

### 2.2 开发新增应用表单
2.2.1 模态对话框实现
- 使用Dialog组件
- 实现打开/关闭控制逻辑
- 添加表单重置功能

2.2.2 表单验证
- 使用zod定义schema
- 实现实时字段校验
- 添加错误提示样式

2.2.3 提交逻辑
- 实现API调用
- 处理提交状态
- 添加成功/失败反馈

### 2.3 开发版本发布功能
2.3.1 Markdown编辑器
- 集成react-markdown-editor
- 配置工具栏按钮
- 实现HTML预览切换

2.3.2 版本校验
- 实现semver正则验证
- 添加版本比较逻辑
- 显示版本升级提示

## 迭代3：会员管理模块

### 3.1 开发JSON权限编辑器
3.1.1 Monaco集成
- 配置monaco-editor组件
- 设置JSON语言模式
- 实现主题适配

3.1.2 实时验证
- 加载JSON schema定义
- 实现错误标记
- 添加格式校验按钮

### 3.2 实现权限版本对比
3.2.1 差异视图
- 集成react-diff-viewer
- 实现并排/行内对比模式
- 添加语法高亮

3.2.2 版本回滚
- 实现版本选择器
- 添加确认对话框
- 调用回滚API

## 迭代4：系统安全组件

### 4.1 开发删除确认对话框
4.1.1 可配置弹窗
- 实现useConfirmDialog hook
- 支持自定义标题/内容
- 添加危险操作红色主题

4.1.2 二次确认
- 实现输入确认文本
- 添加倒计时禁用
- 支持异步操作

### 4.2 实现操作日志组件
4.2.1 时间轴展示
- 实现垂直时间轴布局
- 添加操作类型图标
- 实现分页加载

4.2.2 过滤搜索
- 添加时间范围选择
- 实现操作类型筛选
- 集成全文搜索

（后端部分开发步骤类似，需要继续输出吗？）